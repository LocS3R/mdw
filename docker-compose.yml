version: '3.8'
services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "8080:80"
    networks:
      - tba_network

  backend:
    build:
      context: ./backend
    environment:
      DATABASE_URL: postgres://postgres:25032025@database:5432/tba_db
    ports:
      - "3000:3000"
    depends_on:
      - database
    networks:
      - tba_network

  database:
    image: postgres:15
    container_name: tba_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 25032025
      POSTGRES_DB: tba_db
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - tba_network
  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot:ro  # Thêm dòng này
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - tba_network
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot:rw
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      sh -c "
        echo '0 3 * * * certbot renew --webroot -w /var/www/certbot
        --post-hook \"docker exec nginx nginx -s reload\"' > /etc/crontabs/root;
        crond -f
      "
    depends_on:
      - nginx
volumes:
  db_data:

networks:
  tba_network:
