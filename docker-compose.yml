version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./frontend/.env.production
    ports:
      - "8080:80"  # Host:8080 -> Container:80 (web server)
    networks:
      - tba_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "npm run migration:run && npm run start:prod"
    env_file:
      - ./backend/.env.production
    ports:
      - "3000:3000"  # Host:3000 -> Container:3000 (NestJS app)
    volumes:
      - ./uploads:/uploads  # Liên kết thư mục uploads trên host với container
    depends_on:
      database:
        condition: service_healthy  # Đợi database sẵn sàng
    networks:
      - tba_network
    restart: unless-stopped

  database:
    image: postgres:15
    container_name: tba_db
    env_file:
      - ./.env.db  # File chứa POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB
    volumes:
      - db_data:/var/lib/postgresql/data  # Dữ liệu bền vững
    ports:
      - "5432:5432"  # Để debug local nếu cần, có thể bỏ trong production
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]  # Kiểm tra database sẵn sàng
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tba_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro  # Certbot certificates (read-only)
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf  # Cấu hình Nginx
      - /var/lib/letsencrypt/challenges:/challenges:rw  # ACME challenges cho HTTPS
      - ./uploads:/uploads:rw
    ports:
      - "80:80"   # HTTP
      - "443:443" # HTTPS
    depends_on:
      - frontend
      - backend
    networks:
      - tba_network
    restart: unless-stopped

# Định nghĩa volumes
volumes:
  db_data:

# Định nghĩa network
networks:
  tba_network:
    driver: bridge